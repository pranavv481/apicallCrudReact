[{"D:\\toofaniCoder\\crud2\\src\\index.js":"1","D:\\toofaniCoder\\crud2\\src\\App.js":"2","D:\\toofaniCoder\\crud2\\src\\Components\\AddPost.js":"3","D:\\toofaniCoder\\crud2\\src\\Components\\Post.js":"4","D:\\toofaniCoder\\crud2\\src\\Components\\UpdatePost.js":"5","D:\\toofaniCoder\\crud2\\src\\Components\\Posts.js":"6","D:\\toofaniCoder\\crud2\\src\\Components\\Navbar.js":"7","D:\\toofaniCoder\\crud2\\src\\Store.js":"8","D:\\toofaniCoder\\crud2\\src\\Reducer\\index.js":"9","D:\\toofaniCoder\\crud2\\src\\Reducer\\postReducer.js":"10","D:\\toofaniCoder\\crud2\\src\\Action\\types.js":"11","D:\\toofaniCoder\\crud2\\src\\Action\\postAction.js":"12"},{"size":199,"mtime":1608716973376,"results":"13","hashOfConfig":"14"},{"size":907,"mtime":1608725011559,"results":"15","hashOfConfig":"14"},{"size":1878,"mtime":1608731562276,"results":"16","hashOfConfig":"14"},{"size":786,"mtime":1608726628014,"results":"17","hashOfConfig":"14"},{"size":2247,"mtime":1608728913476,"results":"18","hashOfConfig":"14"},{"size":1678,"mtime":1608731370327,"results":"19","hashOfConfig":"14"},{"size":1181,"mtime":1608718342752,"results":"20","hashOfConfig":"14"},{"size":349,"mtime":1608722275706,"results":"21","hashOfConfig":"14"},{"size":149,"mtime":1608731885098,"results":"22","hashOfConfig":"14"},{"size":1082,"mtime":1608730172042,"results":"23","hashOfConfig":"14"},{"size":205,"mtime":1608718798906,"results":"24","hashOfConfig":"14"},{"size":1383,"mtime":1608730638264,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1xyo76d",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\toofaniCoder\\crud2\\src\\index.js",[],["57","58"],"D:\\toofaniCoder\\crud2\\src\\App.js",[],"D:\\toofaniCoder\\crud2\\src\\Components\\AddPost.js",["59"],"import React, { useState } from 'react'\r\nimport shortid from \"shortid\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {useDispatch} from \"react-redux\";\r\nimport { createPost } from '../Action/postAction';\r\nimport {useHistory} from \"react-router-dom\";\r\nconst AddPost = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const dispatch = useDispatch(); \r\n    const history = useHistory();\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        const newObj={\r\n            id:parseInt(uuidv4()),\r\n            title,\r\n            body\r\n        }\r\n        console.log(newObj)\r\n        \r\n       dispatch(createPost(newObj))\r\n       setTitle(\"\")\r\n       setBody(\"\")\r\n        history.push(\"/\");\r\n    }\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <form onSubmit={onSubmitHandler}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Body</label>\r\n                    <textarea name=\"\"\r\n                        id=\"\" cols=\"30\"\r\n                        rows=\"10\"\r\n                        className=\"form-control\"\r\n                        value={body}\r\n                        onChange={(e) => setBody(e.target.value)}\r\n                    ></textarea>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPost\r\n","D:\\toofaniCoder\\crud2\\src\\Components\\Post.js",["60"],"import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getPost } from '../Action/postAction';\r\nconst Post = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const post = useSelector(state => state.post.post)\r\n  console.log(post)\r\n  useEffect(() => {\r\n    loadPost()\r\n  }, [])\r\n \r\n  const loadPost = () => {\r\n    dispatch(getPost(id))\r\n  }\r\n \r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{post?post.title:\"\"}</h5>\r\n          <p className=\"card-text\">{post?post.body:\"\"}</p>\r\n         </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","D:\\toofaniCoder\\crud2\\src\\Components\\UpdatePost.js",["61","62","63"],"import React, { useEffect, useState } from 'react'\r\nimport shortid from \"shortid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPost, getPost, updatePost } from '../Action/postAction';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nconst UpdatePost = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    console.log(id)\r\n    const post = useSelector(state => state.post.post)\r\n    console.log(post)\r\n    const loadPost = () => {\r\n        dispatch(getPost(id))\r\n    }\r\n    useEffect(() => {\r\n        loadPost()\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(post){\r\n            setTitle(post.title)\r\n            setBody(post.body)\r\n        }\r\n    },[post])\r\n\r\n    \r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        const newObj = {\r\n            id: post.id,\r\n            title,\r\n            body\r\n        }\r\n        console.log(newObj)\r\n\r\n        dispatch(updatePost(newObj))\r\n        history.push(\"/\");\r\n    }\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <form onSubmit={onSubmitHandler}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Body</label>\r\n                    <textarea name=\"\"\r\n                        id=\"\" cols=\"30\"\r\n                        rows=\"10\"\r\n                        className=\"form-control\"\r\n                        value={body}\r\n                        onChange={(e) => setBody(e.target.value)}\r\n                    ></textarea>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatePost\r\n","D:\\toofaniCoder\\crud2\\src\\Components\\Posts.js",["64"],"import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { deletePost, getPosts } from '../Action/postAction';\r\nconst Posts = () => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.post.posts);\r\n    console.log(posts)\r\n    useEffect(() => {\r\n        dispatch(getPosts())\r\n    }, [])\r\n    return (\r\n        <div className=\"container\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Title</th>\r\n                        <th scope=\"col\">Body</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {posts ? posts.map(post => (\r\n                        <tr key={post.id}>\r\n                            <th scope=\"row\">{post.id}</th>\r\n                            <td>{post.title}</td>\r\n                            <td>{post.body}</td>\r\n                            <td>\r\n                                <Link to={`/post/${post.id}`} className=\"btn btn-primary\">View</Link>\r\n                                <Link to={`/updatepost/${post.id}`} className=\"btn btn-warning\">Update</Link>\r\n                                <button className=\"btn btn-danger\" onClick={()=>dispatch(deletePost(post.id))}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    )) : <h1>Loading...</h1>}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","D:\\toofaniCoder\\crud2\\src\\Components\\Navbar.js",["65"],"import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/addPost\">Add Post</Link>\r\n                        </li>\r\n                       \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","D:\\toofaniCoder\\crud2\\src\\Store.js",[],"D:\\toofaniCoder\\crud2\\src\\Reducer\\index.js",[],"D:\\toofaniCoder\\crud2\\src\\Reducer\\postReducer.js",["66","67"],"import { GET_POSTS, GET_POST, CREATE_POST, UPDATE_POST, DELETE_POST } from \"../Action/types\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null\r\n}\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: action.payload\r\n            }\r\n\r\n        case CREATE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [action.payload, ...state.posts]\r\n                }\r\n        case UPDATE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((post) => post.id == action.payload.id ? action.payload : post)\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((post) => post.id != action.payload)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","D:\\toofaniCoder\\crud2\\src\\Action\\types.js",[],"D:\\toofaniCoder\\crud2\\src\\Action\\postAction.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":12,"column":6,"nodeType":"78","endLine":12,"endColumn":8,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":15},{"ruleId":"72","severity":1,"message":"80","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":20},{"ruleId":"76","severity":1,"message":"77","line":20,"column":8,"nodeType":"78","endLine":20,"endColumn":10,"suggestions":"81"},{"ruleId":"76","severity":1,"message":"82","line":11,"column":8,"nodeType":"78","endLine":11,"endColumn":10,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":7,"column":17,"nodeType":"86","endLine":7,"endColumn":54},{"ruleId":"87","severity":1,"message":"88","line":29,"column":58,"nodeType":"89","messageId":"90","endLine":29,"endColumn":60},{"ruleId":"87","severity":1,"message":"91","line":34,"column":61,"nodeType":"89","messageId":"90","endLine":34,"endColumn":63},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'shortid' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPost'. Either include it or remove the dependency array.","ArrayExpression",["94"],"'createPost' is defined but never used.",["95"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["96"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [loadPost]",{"range":"102","text":"103"},{"range":"104","text":"103"},"Update the dependencies array to be: [dispatch]",{"range":"105","text":"106"},[400,402],"[loadPost]",[712,714],[406,408],"[dispatch]"]